{{- $sts := list "sts" "StatefulSet" "statefulset" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    {{- include "chart.selectorLabels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          {{- with .Values.additionalArgs }}
            {{- range . }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "chart.fullname" . }}-config
            - secretRef:
                name: {{ include "chart.fullname" . }}-config
            - secretRef:
                name: {{ include "chart.fullname" . }}-smtp-config
          env:
            - name: GID
              value: "1001"
            - name: UID
              value: "1001"
            - name: LLDAP_LDAP_USER_DN
              valueFrom:
                secretKeyRef:
                  name: {{ include "chart.ldapUserSecretName" . }}
                  key: {{ include "chart.ldapUserSecretkey.username" . }}
            - name: LLDAP_LDAP_USER_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ include "chart.ldapUserSecretName" . }}
                  key: {{ include "chart.ldapUserSecretkey.email" . }}
            - name: LLDAP_LDAP_USER_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "chart.ldapUserSecretName" . }}
                  key: {{ include "chart.ldapUserSecretkey.password" . }}

            {{- if .Values.envVars }}
            {{- with .Values.envVars }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 17170
            - name: ldap
              containerPort: 3890
            - name: ldaps
              containerPort: 6360
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/data
          {{- if eq .Values.endpoints.ldaps.enabled true }}
            - name: ldaps-certificate
              mountPath: /var/ldaps-certificate
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      - name: data
        emptyDir: {}
      {{- if eq .Values.endpoints.ldaps.enabled true }}
      - name: ldaps-certificate
        secret:
          secretName: {{ .Values.endpoints.ldaps.secret.name | required "service.ldaps.secretName must be set" | quote }}
          items:
            - key: {{ .Values.endpoints.ldaps.secret.certKey | required "service.ldaps.certKey must be set" | quote }}
              path: cert.pem
            - key: {{ .Values.endpoints.ldaps.secret.keyKey | required "service.ldaps.keyKey must be set" | quote }}
              path: key.pem
      {{- end }}
      {{- if and .Values.persistence.enabled (eq .Values.persistence.type "pvc") }}
      - name: storage
        persistentVolumeClaim:
          claimName: {{ tpl (.Values.persistence.existingClaim | default (include "chart.fullname" .)) . }}
      {{- else if and .Values.persistence.enabled (has .Values.persistence.type $sts) }}
      {{/* nothing */}}
      {{- else }}
      - name: storage
        {{- if .Values.persistence.inMemory.enabled }}
        emptyDir:
          medium: Memory
          {{- with .Values.persistence.inMemory.sizeLimit }}
          sizeLimit: {{ . }}
          {{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
