{{- $sts := list "sts" "StatefulSet" "statefulset" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lldap.fullname" . }}
  labels:
    {{- include "lldap.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "lldap.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "lldap.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lldap.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          env:
            - name: uid
              value: "{{ .Values.lldap.uid }}"
            - name: gid
              value: "{{ .Values.lldap.gid }}"
            - name: TZ
              value: "{{ .Values.lldap.tz }}"
            {{- if .Values.ingress.enabled }}
            - name: LLDAP_HTTP_URL
            {{- with (first .Values.ingress.hosts) }}
              value: http{{ if $.Values.ingress.tls }}s{{ end }}://{{ .host }}{{- with (first .paths) }}{{ .path }}{{- end }}
            {{- end }}
            {{- end }}
            - name: LLDAP_LDAP_PORT
              value: "{{ .Values.service.ldap.port }}"
            - name: LLDAP_HTTP_PORT
              value: "{{ .Values.service.http.port }}"
            - name: LLDAP_LDAP_USER_DN
              valueFrom:
                secretKeyRef:
                  name: {{ include "lldap.ldapUserSecretName" . }}
                  key: 'username'
            - name: LLDAP_LDAP_USER_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "lldap.ldapUserSecretName" . }}
                  key: 'password'
            {{- if .Values.lldap.ldapUser.email }}
            - name: LLDAP_LDAP_USER_EMAIL
              value: {{ .Values.lldap.ldapUser.email | quote }}
            {{- end }}
            - name: LLDAP_LDAP_BASE_DN
              value: "{{ .Values.lldap.ldapBaseDomain }}"
            - name: LLDAP_VERBOSE
              value: "{{ .Values.lldap.verbose }}"
            - name: LLDAP_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "lldap.ldapConfigSecretName" . }}
                  key: 'databaseUrl'
            - name: LLDAP_KEY_SEED
              valueFrom:
                secretKeyRef:
                  name: {{ include "lldap.ldapConfigSecretName" . }}
                  key: 'keySeed'
            - name: LLDAP_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "lldap.ldapConfigSecretName" . }}
                  key: jwtSecret
            - name: LLDAP_VERBOSE
              value: "{{ .Values.lldap.verbose }}"
            {{- if $.Values.lldap.smtp.enablePasswordReset }}
            - name: LLDAP_SMTP_OPTIONS__ENABLE_PASSWORD_RESET
              value: "{{ .Values.lldap.smtp.enablePasswordReset }}"
            - name: LLDAP_SMTP_OPTIONS__SERVER
              value: {{ .Values.lldap.smtp.server | quote }}
            - name: LLDAP_SMTP_OPTIONS__PORT
              value: {{ .Values.lldap.smtp.port | quote }}
            - name: LLDAP_SMTP_OPTIONS__SMTP_ENCRYPTION
              value: {{ .Values.lldap.smtp.encryption | quote }}
            - name: LLDAP_SMTP_OPTIONS__FROM
              value: {{ include "lldap.smtpFromString" . | quote }}
            - name: LLDAP_SMTP_OPTIONS__REPLY_TO
              value: {{ include "lldap.smtpReplyToString" . | quote }}
            - name: LLDAP_SMTP_OPTIONS__USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "lldap.smtpUserSecretName" . }}
                  key: username
            - name: LLDAP_SMTP_OPTIONS__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "lldap.smtpUserSecretName" . }}
                  key: password
            {{- end }}

            {{- if .Values.envVars }}
            {{- with .Values.envVars }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.http.port }}
              protocol: TCP
            - name: ldap
              containerPort: {{ .Values.service.ldap.port }}
              protocol: TCP
            {{ if $.Values.lldap.ldaps.enabled }}
            - name: ldaps
              containerPort: {{ .Values.service.ldaps.port }}
              protocol: TCP
            {{ end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/data
          {{- if eq .Values.lldap.ldaps.enabled true }}
            - name: ldaps-certificate
              mountPath: /var/ldaps-certificate
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
      {{- if eq .Values.lldap.ldaps.enabled true }}
      - name: ldaps-certificate
        secret:
          secretName: {{ .Values.lldap.ldaps.secret.name | required "lldap.ldaps.secretName must be set" | quote }}
          items:
            - key: {{ .Values.lldap.ldaps.secret.certKey | required "lldap.ldaps.certKey must be set" | quote }}
              path: cert.pem
            - key: {{ .Values.lldap.ldaps.secret.keyKey | required "lldap.ldaps.keyKey must be set" | quote }}
              path: key.pem
      {{- end }}
      - name: data
      {{- if and .Values.persistence.enabled (eq .Values.persistence.type "pvc") }}
        persistentVolumeClaim:
          claimName: {{ tpl (.Values.persistence.existingClaim | default (include "lldap.fullname" .)) . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
