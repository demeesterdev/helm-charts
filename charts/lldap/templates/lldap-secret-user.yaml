{{- if eq (default "" .Values.lldap.ldapUser.existingSecret.name) ""}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "lldap.ldapUserSecretName" . }}
  labels:
    {{- include "lldap.labels" . | nindent 4 }}
    {{- include "lldap.selectorLabels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  {{- /*
    retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
    and set $lldapUserPassword to existing secret data or generate a random one when not exists
  */}}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace (include "lldap.ldapUserSecretName" .) ) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $lldapUserPassword := (get $secretData "ldap_user_password") | default (randAlphaNum 32 | b64enc) }}
  username: {{ .Values.lldap.ldapUser.username | b64enc }}
  password: {{ $lldapUserPassword }}
{{- end}}
