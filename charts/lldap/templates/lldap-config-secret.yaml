apiVersion: v1
kind: Secret
metadata:
  name: {{ include "lldap.ldapConfigSecretName" . }}
  labels:
    {{- include "lldap.labels" . | nindent 4 }}
    {{- include "lldap.selectorLabels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  databaseUrl: {{ include "lldap.databaseURL" . | b64enc }}
  {{- /*
    retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
    and set $jwtSecret to existing secret data or generate a random one when not exists
  */}}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace (include "lldap.ldapConfigSecretName" .) ) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $jwtSecret := (get $secretData "jwtSecret") | default (randAlphaNum 32 | b64enc) }}
  jwtSecret: {{ $jwtSecret | b64enc }}

  {{- /*
    retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
    and set $keySeed to existing secret data or generate a random one when not exists
  */}}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace (include "lldap.ldapConfigSecretName" .) ) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $keySeed := (get $secretData "keySeed") | default (randAlphaNum 32 | b64enc) }}
  keySeed: {{ $keySeed | b64enc }}
