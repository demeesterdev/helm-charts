{{- $secretName := printf "%s-config" (include "chart.fullname" . ) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote}}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    {{- include "chart.selectorLabels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  LLDAP_DATABASE_URL: {{ include "chart.databaseURL" . | b64enc }}
  {{- /*
    retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
    and set $jwtSecret to existing secret data or generate a random one when not exists
  */}}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $jwtSecret := (get $secretData "LLDAP_JWT_SECRET") | default (randAlphaNum 32 | b64enc) }}
  LLDAP_JWT_SECRET: {{ $jwtSecret | b64enc }}

  {{- /*
    retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
    and set $keySeed to existing secret data or generate a random one when not exists
  */}}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $keySeed := (get $secretData "LLDAP_KEY_SEED") | default (randAlphaNum 32 | b64enc) }}
  LLDAP_KEY_SEED: {{ $keySeed | b64enc }}
