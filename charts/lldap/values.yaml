# yaml-language-server: $schema=values.schema.json
# Default values for lldap.

# -- Number of lldap replicas.
# Do not increase this above 1 if you are using the SQLite backend.
replicaCount: 1

image:
  # -- image repository
  repository: lldap/lldap
  # -- image pull policy
  pullPolicy: IfNotPresent
  # -- image tag
  # @default -- chart.appVersion
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

lldap:
  # @schema
  # pattern: ^(dc=([a-z0-9]([-a-z0-9]*[a-z0-9])?))(,dc=([a-z0-9]([-a-z0-9]*[a-z0-9])?))*$
  # @schema
  # -- Base DN for LDAP.
  # This is usually your domain name, and is used as a
  # namespace for your users. The choice is arbitrary, but will be needed
  # to configure the LDAP integration with other services.
  # The sample value is for "example.com", but you can extend it with as
  # many "dc" as you want, and you don't actually need to own the domain
  # name.
  ldapBaseDomain: "dc=example,dc=com"

  # -- LDAP admin user.
  # For the LDAP interface.
  ldapUser:
    # -- The username of the admin user.
    # a value of "admin" here will create the LDAP user
    # "cn=admin,ou=people,dc=example,dc=com" (with ldapBaseDomain above).
    # For the administration interface, this is the username.
    username: "admin"
    # @schema
    # format: idn-email
    # required: false
    # @schema
    # -- The email of the admin user.
    email: ~

    # -- The secret to store the admin credentials in
    # existingSecret will overrule this value
    # @default -- <release-name>-user
    secretName: ~

    existingSecret:
      # @schema
      # pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?)$
      # required: false
      # @schema
      # -- Existing secret containing the admin credentials
      # If set, the admin user will be created using the values in the secret
      # expects the keys "username", "password"
      name: ~

    # Force reset of the admin password.
    # Break glass in case of emergency: if you lost the admin password, you
    # can set this to true to force a reset of the admin password to the value
    # of ldap_user_pass above.
    ldapAdminForceReset: false

  # @schema
  # type: [null, string]
  # @schema
  # -- Seed to generate the server private key. This can be any random string, the recommendation
  # is that it's at least 12 characters long.
  # @default -- generates a 64 long alphanumeric string
  keySeed: ~

  # @schema
  # type: [null, string]
  # @schema
  # -- Random secret for JWT signature.
  # This secret should be random, and should be shared with application servers that need to
  # consume the JWTs. Changing this secret will invalidate all user sessions and require them
  # to re-login.
  # @default -- generates a 64 long alphanumeric string
  jwtSecret: ~

  uid: 1001
  gid: 1001
  tz: "Etc/UTC"

  # -- Tune the logging to be more verbose
  verbose: false

  # -- Options to configure SMTP parameters ti sebd oasswird reset emails
  # @default -- see below
  smtp:
    # -- Whether to enabled password reset via email, from LLDAP.
    enablePasswordReset: false
    # -- SMTP server.
    server: ""
    # -- SMTP port.
    port: ""
    # -- SMTP user.
    user:
      # -- The SMPT user, usually your email address.
      username: ""
      # -- The password of the smtp user.
      password: ""

      # -- The secret to store the smtp credentials in
      # existingSecret will overrule this value
      # @default -- <release-name>-user
      secretName: ""

      existingSecret:
        # @schema
        # pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?)$
        # type: [null, string]
        # @schema
        # -- Existing secret containing the admin credentials
        # If set, the admin user will be created using the values in the secret
        # expects the keys "username", "password"
        name: ~

    # @schema
    # enum:
    # - NONE
    # - TLS
    # - STARTTLS
    # @schema
    # -- SMTP encryption type.
    # valid values are "NONE" (no encryption), "TLS" or "STARTTLS"
    encryption: "TLS"
    # -- The header field, optional: how the sender appears in the email.
    from:
      name: ""
      # @schema
      # format: idn-email
      # required: false
      # @schema
      email: ~

    # -- The reply-to field, optional: where to send replies to. If not set, the
    # from field is used (if set).
    replyTo:
      name: ""
      # @schema
      # format: idn-email
      # required: false
      # @schema
      email: ~

  # -- Options to configure LDAPS
  # @default -- see below
  ldaps:
    enabled: false
    secret:
      # @schema
      # type: [null, string]
      # @schema
      # -- The secret containing the certificate and key for the ldaps service
      name: ~
      # -- The key in the secret containing the certificate
      certKey: "tls.crt"
      # -- The key in the secret containing the key
      keyKey: "tls.key"
  # --- define extra volumes and mounts for the ldap
  extraVolumes: []
  extraVolumeMounts: []

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # @default -- If not set and create is true, a name is generated using the fullname template
  name: ""

# @schema
# additionalProperties: true
# @schema
podAnnotations: {}

# @schema
# additionalProperties: true
# @schema
podLabels: {}

# @schema
# additionalProperties: true
# @schema
podSecurityContext:
  {}
  # fsGroup: 2000

# @schema
# additionalProperties: true
# @schema
securityContext:
  # capabilities:
  #  drop:
  #    - ALL
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Configures service settings for the chart.
# @default -- See values.yaml
service:
  http:
    type: ClusterIP
    port: 17170
  ldap:
    type: ClusterIP
    port: 3890
  ldaps:
    type: ClusterIP
    port: 6360

# -- Enable and configure ingress settings for the chart under this key.
# @default -- See values.yaml
ingress:
  enabled: false
  className: ""
  # @schema
  # additionalProperties: true
  # @schema
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Persistence is only required if you are using the SQLite database (default).
# You can disable persistence if you select MariaDB or PostgreSQL.
# @default -- see values.yaml
persistence:
  type: pvc
  enabled: false
  # storageClassName: default
  accessMode: ReadWriteOnce
  size: 100Mi
  # annotations: {}
  finalizers:
    - kubernetes.io/pvc-protection
  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is
  #   set, choosing the default provisioner.  (gp2 on AWS, standard on
  #   GKE, AWS & OpenStack)
  #
  # storageClass: "-"

  # If 'lookupVolumeName' is set to true, Helm will attempt to retrieve
  # the current value of 'spec.volumeName' and incorporate it into the template.
  lookupVolumeName: true

resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

nodeSelector: {}

tolerations: []

affinity: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# --- Enable and configure external postgresql database
externalPostgresql:
  enabled: false
  auth:
    host: ""
    port: 5432
    username: ""
    password: ""
    database: lldap

# -- Enable and configure external mariadb database
externalMariadb:
  enabled: false
  auth:
    host: ""
    port: 3306
    username: ""
    password: ""
    database: lldap
