{
  "additionalProperties": false,
  "properties": {
    "Annotations": {
      "additionalProperties": false,
      "description": "## -- Annotations to add to the deployment",
      "title": "Annotations",
      "type": "object"
    },
    "Labels": {
      "additionalProperties": false,
      "description": "## -- Labels to add to the deployment",
      "title": "Labels",
      "type": "object"
    },
    "additionalArgs": {
      "items": {},
      "description": "## -- Additional arguments to pass in to the lldap instance",
      "title": "additionalArgs",
      "type": "array"
    },
    "affinity": {
      "additionalProperties": false,
      "title": "affinity",
      "type": "object"
    },
    "autoscaling": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": false,
          "title": "enabled",
          "type": "boolean"
        },
        "maxReplicas": {
          "default": 100,
          "title": "maxReplicas",
          "type": "integer"
        },
        "minReplicas": {
          "default": 1,
          "title": "minReplicas",
          "type": "integer"
        },
        "targetCPUUtilizationPercentage": {
          "default": 80,
          "title": "targetCPUUtilizationPercentage",
          "type": "integer"
        }
      },
      "title": "autoscaling",
      "type": "object",
      "required": [
        "enabled",
        "minReplicas",
        "maxReplicas",
        "targetCPUUtilizationPercentage"
      ]
    },
    "database": {
      "additionalProperties": false,
      "properties": {
        "connection": {
          "default": "/data/users.db",
          "description": "## -- The database connection string\n## for sqlite, this is the path to the database file\n## for postgres, this is the connection string",
          "title": "connection",
          "type": "string"
        },
        "type": {
          "default": "sqlite",
          "description": "## -- The database to use. Valid values are \"sqlite\" and \"postgres\"",
          "title": "type",
          "type": "string"
        }
      },
      "title": "database",
      "type": "object",
      "required": [
        "type",
        "connection"
      ]
    },
    "endpoints": {
      "additionalProperties": false,
      "properties": {
        "http": {
          "additionalProperties": false,
          "properties": {
            "ingress": {
              "additionalProperties": false,
              "properties": {
                "annotations": {
                  "additionalProperties": false,
                  "title": "annotations",
                  "type": "object"
                },
                "className": {
                  "default": "",
                  "title": "className",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "title": "enabled",
                  "type": "boolean"
                },
                "hosts": {
                  "items": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "host": {
                            "default": "chart-example.local",
                            "title": "host",
                            "type": "string"
                          },
                          "paths": {
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "path": {
                                      "default": "/",
                                      "title": "path",
                                      "type": "string"
                                    },
                                    "pathType": {
                                      "default": "ImplementationSpecific",
                                      "title": "pathType",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "required": [
                                    "path",
                                    "pathType"
                                  ]
                                }
                              ]
                            },
                            "title": "paths",
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "required": [
                          "host",
                          "paths"
                        ]
                      }
                    ]
                  },
                  "description": "## kubernetes.io/ingress.class: traefik\n## kubernetes.io/tls-acme: \"true\"",
                  "title": "hosts",
                  "type": "array"
                },
                "tls": {
                  "items": {},
                  "title": "tls",
                  "type": "array"
                }
              },
              "title": "ingress",
              "type": "object",
              "required": [
                "enabled",
                "className",
                "annotations",
                "hosts",
                "tls"
              ]
            },
            "service": {
              "additionalProperties": false,
              "properties": {
                "port": {
                  "default": 80,
                  "title": "port",
                  "type": "integer"
                },
                "type": {
                  "default": "ClusterIP",
                  "title": "type",
                  "type": "string"
                }
              },
              "description": "## -- kubernetes service configuration",
              "title": "service",
              "type": "object",
              "required": [
                "type",
                "port"
              ]
            },
            "url": {
              "default": "http://localhost",
              "description": "## -- The public URL of the server, for password reset links.\n## if using an ingress make shur it matches the ingress host and path",
              "title": "url",
              "type": "string"
            }
          },
          "description": "## -- http service configuration for user login and admininstration",
          "title": "http",
          "type": "object",
          "required": [
            "url",
            "service",
            "ingress"
          ]
        },
        "ldap": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": true,
              "description": "## -- expose lldap unencrypted in the cluster",
              "title": "enabled",
              "type": "boolean"
            },
            "service": {
              "additionalProperties": false,
              "properties": {
                "port": {
                  "default": 389,
                  "title": "port",
                  "type": "integer"
                },
                "type": {
                  "default": "ClusterIP",
                  "title": "type",
                  "type": "string"
                }
              },
              "title": "service",
              "type": "object",
              "required": [
                "type",
                "port"
              ]
            }
          },
          "description": "## -- ldap service configuration",
          "title": "ldap",
          "type": "object",
          "required": [
            "enabled",
            "service"
          ]
        },
        "ldaps": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": false,
              "title": "enabled",
              "type": "boolean"
            },
            "secret": {
              "additionalProperties": false,
              "properties": {
                "certKey": {
                  "default": "tls.crt",
                  "description": "## -- The key in the secret containing the certificate",
                  "title": "certKey",
                  "type": "string"
                },
                "keyKey": {
                  "default": "tls.key",
                  "description": "## -- The key in the secret containing the key",
                  "title": "keyKey",
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "description": "## -- The secret containing the certificate and key for the ldaps service",
                  "title": "name",
                  "type": "string"
                }
              },
              "title": "secret",
              "type": "object",
              "required": [
                "name",
                "certKey",
                "keyKey"
              ]
            },
            "service": {
              "additionalProperties": false,
              "properties": {
                "port": {
                  "default": 636,
                  "title": "port",
                  "type": "integer"
                },
                "type": {
                  "default": "ClusterIP",
                  "title": "type",
                  "type": "string"
                }
              },
              "title": "service",
              "type": "object",
              "required": [
                "type",
                "port"
              ]
            }
          },
          "description": "## -- expose lldap encrypted in the cluster",
          "title": "ldaps",
          "type": "object",
          "required": [
            "enabled",
            "service",
            "secret"
          ]
        }
      },
      "title": "endpoints",
      "type": "object",
      "required": [
        "http",
        "ldap",
        "ldaps"
      ]
    },
    "envVars": {
      "items": {},
      "description": "## Any other environment variables:",
      "title": "envVars",
      "type": "array"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "title": "global",
      "type": "object"
    },
    "image": {
      "additionalProperties": false,
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "lldap/lldap",
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "",
          "description": "## Overrides the image tag whose default is the chart appVersion.",
          "title": "tag",
          "type": "string"
        }
      },
      "title": "image",
      "type": "object",
      "required": [
        "repository",
        "pullPolicy",
        "tag"
      ]
    },
    "imagePullSecrets": {
      "items": {},
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ldapAdmin": {
      "additionalProperties": false,
      "properties": {
        "email": {
          "default": "",
          "title": "email",
          "type": "string"
        },
        "existingSecret": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "default": "",
              "title": "name",
              "type": "string"
            }
          },
          "description": "## -- use existing secret for admin user\n## If set, the admin user will be created using the values in the secret\n## expects the keys \"username\", \"password\" and \"email\"",
          "title": "existingSecret",
          "type": "object",
          "required": [
            "name"
          ]
        },
        "ldapAdminForceReset": {
          "default": false,
          "description": "## Force reset of the admin password.\n## Break glass in case of emergency: if you lost the admin password, you\n## can set this to true to force a reset of the admin password to the value\n## of ldap_user_pass above.",
          "title": "ldapAdminForceReset",
          "type": "boolean"
        },
        "secretName": {
          "default": "lldap-admin-user",
          "description": "## -- set the password for the admin user\n## The secret to creat for the new admin user.\n## existingSecret will overrule this value",
          "title": "secretName",
          "type": "string"
        },
        "userName": {
          "default": "admin",
          "title": "userName",
          "type": "string"
        }
      },
      "description": "## -- LDAP admin user config\n## settings are used to iniitially create the admin user. user can change\n## the password after the first login. If no existing secret is provided.\n## a new password will be generated and stored in a new secret",
      "title": "ldapAdmin",
      "type": "object",
      "required": [
        "userName",
        "email",
        "ldapAdminForceReset",
        "secretName",
        "existingSecret"
      ]
    },
    "ldapBaseDomain": {
      "default": "dc=example,dc=com",
      "description": "## @schema\n## pattern: ^(dc=([a-z0-9]([-a-z0-9]*[a-z0-9])?))(,dc=([a-z0-9]([-a-z0-9]*[a-z0-9])?))*$\n## @schema\n## -- Base DN for LDAP.\n## This is usually your domain name, and is used as a\n## namespace for your users. The choice is arbitrary, but will be needed\n## to configure the LDAP integration with other services.\n## The sample value is for \"example.com\", but you can extend it with as\n## many \"dc\" as you want, and you don't actually need to own the domain\n## name.",
      "title": "ldapBaseDomain",
      "type": "string"
    },
    "livenessProbe": {
      "additionalProperties": false,
      "properties": {
        "httpGet": {
          "additionalProperties": false,
          "properties": {
            "path": {
              "default": "/",
              "title": "path",
              "type": "string"
            },
            "port": {
              "default": "http",
              "title": "port",
              "type": "string"
            }
          },
          "title": "httpGet",
          "type": "object",
          "required": [
            "path",
            "port"
          ]
        }
      },
      "title": "livenessProbe",
      "type": "object",
      "required": [
        "httpGet"
      ]
    },
    "logLevel": {
      "default": "info",
      "description": "## @schema\n## enum:\n## - verbose\n## - info\n## @schema\n## -- What log level to output. Valid values are 'verbose' and 'info'",
      "title": "logLevel",
      "type": "string"
    },
    "nodeSelector": {
      "additionalProperties": false,
      "title": "nodeSelector",
      "type": "object"
    },
    "passwordReset": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": false,
          "title": "enabled",
          "type": "boolean"
        },
        "smtp": {
          "additionalProperties": false,
          "properties": {
            "encryption": {
              "default": "",
              "description": "## @schema\n## enum:\n## - \"\"\n## - NONE\n## - TLS\n## - STARTTLS\n## @schema\n## -- SMTP encryption type.\n## valid values are \"NONE\" (no encryption), \"TLS\" or \"STARTTLS\"",
              "title": "encryption",
              "type": "string"
            },
            "existingSecret": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "default": "",
                  "description": "## @schema\n## required: false\n## @schema\n## -- Use and existing Secret contianing the SMTP credentials\n## expects the keys \"user\" and \"password\"",
                  "title": "name",
                  "type": "string"
                }
              },
              "title": "existingSecret",
              "type": "object",
              "required": [
                "name"
              ]
            },
            "from": {
              "default": "",
              "description": "## The header field, optional: how the sender appears in the email. The first\n## is a free-form name, followed by an email between \u003c\u003e",
              "title": "from",
              "type": "string"
            },
            "password": {
              "default": "",
              "description": "## @schema\n## required: false\n## @schema\n## -- SMTP password",
              "title": "password",
              "type": "string"
            },
            "port": {
              "default": "",
              "description": "## -- SMTP port",
              "title": "port",
              "type": "string"
            },
            "replyTo": {
              "default": "",
              "description": "## -- The reply-to field, optional: where to send replies to. If not set, the\n## from field is used (if set).",
              "title": "replyTo",
              "type": "string"
            },
            "server": {
              "default": "",
              "description": "## -- SMTP server",
              "title": "server",
              "type": "string"
            },
            "user": {
              "default": "",
              "description": "## @schema\n## required: false\n## @schema\n## -- SMTP user, usually your email address.",
              "title": "user",
              "type": "string"
            }
          },
          "title": "smtp",
          "type": "object",
          "required": [
            "server",
            "port",
            "encryption",
            "from",
            "replyTo",
            "user",
            "password",
            "existingSecret"
          ]
        }
      },
      "description": "## -- Options to configure SMTP parameters, to send password reset emails",
      "title": "passwordReset",
      "type": "object",
      "required": [
        "enabled",
        "smtp"
      ]
    },
    "persistence": {
      "additionalProperties": false,
      "properties": {
        "accessModes": {
          "items": {
            "anyOf": [
              {
                "type": "string"
              }
            ]
          },
          "description": "## storageClassName: default",
          "title": "accessModes",
          "type": "array"
        },
        "disableWarning": {
          "default": false,
          "title": "disableWarning",
          "type": "boolean"
        },
        "enabled": {
          "default": false,
          "title": "enabled",
          "type": "boolean"
        },
        "extraPvcLabels": {
          "additionalProperties": false,
          "description": "## selectorLabels: {}\n## Sub-directory of the PV to mount. Can be templated.\n## subPath: \"\"\n## Name of an existing PVC. Can be templated.\n## existingClaim:\n## Extra labels to apply to a PVC.",
          "title": "extraPvcLabels",
          "type": "object"
        },
        "finalizers": {
          "items": {
            "anyOf": [
              {
                "type": "string"
              }
            ]
          },
          "description": "## annotations: {}",
          "title": "finalizers",
          "type": "array"
        },
        "inMemory": {
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "default": false,
              "title": "enabled",
              "type": "boolean"
            },
            "sizeLimit": {
              "default": "30Mi",
              "description": "## The maximum usage on memory medium EmptyDir would be\n## the minimum value between the SizeLimit specified\n## here and the sum of memory limits of all containers in a pod\n##",
              "title": "sizeLimit",
              "type": "string"
            }
          },
          "description": "## If persistence is not enabled, this allows to mount the\n## local storage in-memory to improve performance\n##",
          "title": "inMemory",
          "type": "object",
          "required": [
            "enabled",
            "sizeLimit"
          ]
        },
        "lookupVolumeName": {
          "default": true,
          "description": "## If 'lookupVolumeName' is set to true, Helm will attempt to retrieve\n## the current value of 'spec.volumeName' and incorporate it into the template.",
          "title": "lookupVolumeName",
          "type": "boolean"
        },
        "size": {
          "default": "100Mi",
          "title": "size",
          "type": "string"
        },
        "type": {
          "default": "pvc",
          "title": "type",
          "type": "string"
        }
      },
      "description": "## Enable persistence using Persistent Volume Claims\n## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\n##",
      "title": "persistence",
      "type": "object",
      "required": [
        "type",
        "enabled",
        "accessModes",
        "size",
        "finalizers",
        "extraPvcLabels",
        "disableWarning",
        "inMemory",
        "lookupVolumeName"
      ]
    },
    "podSecurityContext": {
      "additionalProperties": false,
      "title": "podSecurityContext",
      "type": "object"
    },
    "readinessProbe": {
      "additionalProperties": false,
      "properties": {
        "httpGet": {
          "additionalProperties": false,
          "properties": {
            "path": {
              "default": "/",
              "title": "path",
              "type": "string"
            },
            "port": {
              "default": "http",
              "title": "port",
              "type": "string"
            }
          },
          "title": "httpGet",
          "type": "object",
          "required": [
            "path",
            "port"
          ]
        }
      },
      "title": "readinessProbe",
      "type": "object",
      "required": [
        "httpGet"
      ]
    },
    "replicaCount": {
      "default": 1,
      "description": "## Note: paragraphs starting with `# --` will end up in our manual -\n## see https://github.com/norwoodj/helm-docs",
      "title": "replicaCount",
      "type": "integer"
    },
    "resources": {
      "additionalProperties": false,
      "title": "resources",
      "type": "object"
    },
    "securityContext": {
      "additionalProperties": false,
      "title": "securityContext",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "description": "## Annotations to add to the service account",
          "title": "annotations",
          "type": "object"
        },
        "automount": {
          "default": true,
          "description": "## Automatically mount a ServiceAccount's API credentials?",
          "title": "automount",
          "type": "boolean"
        },
        "create": {
          "default": true,
          "description": "## Specifies whether a service account should be created",
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "## The name of the service account to use.\n## If not set and create is true, a name is generated using the fullname template",
          "title": "name",
          "type": "string"
        }
      },
      "title": "serviceAccount",
      "type": "object",
      "required": [
        "create",
        "automount",
        "annotations",
        "name"
      ]
    },
    "tolerations": {
      "items": {},
      "title": "tolerations",
      "type": "array"
    },
    "volumeMounts": {
      "items": {},
      "description": "## Additional volumeMounts on the output Deployment definition.",
      "title": "volumeMounts",
      "type": "array"
    },
    "volumes": {
      "items": {},
      "description": "## Additional volumes on the output Deployment definition.",
      "title": "volumes",
      "type": "array"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [
    "replicaCount",
    "image",
    "imagePullSecrets",
    "Annotations",
    "Labels",
    "logLevel",
    "additionalArgs",
    "envVars",
    "podSecurityContext",
    "securityContext",
    "endpoints",
    "ldapBaseDomain",
    "ldapAdmin",
    "passwordReset",
    "database",
    "persistence",
    "resources",
    "livenessProbe",
    "readinessProbe",
    "autoscaling",
    "volumes",
    "volumeMounts",
    "nodeSelector",
    "tolerations",
    "affinity",
    "serviceAccount"
  ]
}
